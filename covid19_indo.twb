<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_indonesia_time_series_ (covid_indo)' inline='true' name='federated.0pmdfnp026tua71ckhou70v3akme' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_indo' name='excel-direct.0xfxgzm0zb8bco1frrnxf14h903j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/falkautsar/Downloads/archive/covid_indo.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0xfxgzm0zb8bco1frrnxf14h903j' name='covid_19_indonesia_time_series_' table='[covid_19_indonesia_time_series_$]' type='table'>
          <columns gridOrigin='A1:AL10001:no:A1:AL10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='string' name='Location ISO Code' ordinal='1' />
            <column datatype='string' name='Location' ordinal='2' />
            <column datatype='integer' name='New Cases' ordinal='3' />
            <column datatype='integer' name='New Deaths' ordinal='4' />
            <column datatype='integer' name='New Recovered' ordinal='5' />
            <column datatype='integer' name='New Active Cases' ordinal='6' />
            <column datatype='integer' name='Total Cases' ordinal='7' />
            <column datatype='integer' name='Total Deaths' ordinal='8' />
            <column datatype='integer' name='Total Recovered' ordinal='9' />
            <column datatype='integer' name='Total Active Cases' ordinal='10' />
            <column datatype='string' name='Location Level' ordinal='11' />
            <column datatype='string' name='City or Regency' ordinal='12' />
            <column datatype='string' name='Province' ordinal='13' />
            <column datatype='string' name='Country' ordinal='14' />
            <column datatype='string' name='Continent' ordinal='15' />
            <column datatype='string' name='Island' ordinal='16' />
            <column datatype='string' name='Time Zone' ordinal='17' />
            <column datatype='string' name='Special Status' ordinal='18' />
            <column datatype='integer' name='Total Regencies' ordinal='19' />
            <column datatype='integer' name='Total Cities' ordinal='20' />
            <column datatype='integer' name='Total Districts' ordinal='21' />
            <column datatype='integer' name='Total Urban Villages' ordinal='22' />
            <column datatype='integer' name='Total Rural Villages' ordinal='23' />
            <column datatype='integer' name='Area (km2)' ordinal='24' />
            <column datatype='integer' name='Population' ordinal='25' />
            <column datatype='real' name='Population Density' ordinal='26' />
            <column datatype='real' name='Longitude' ordinal='27' />
            <column datatype='real' name='Latitude' ordinal='28' />
            <column datatype='real' name='New Cases per Million' ordinal='29' />
            <column datatype='real' name='Total Cases per Million' ordinal='30' />
            <column datatype='real' name='New Deaths per Million' ordinal='31' />
            <column datatype='real' name='Total Deaths per Million' ordinal='32' />
            <column datatype='real' name='Total Deaths per 100rb' ordinal='33' />
            <column datatype='real' name='Case Fatality Rate' ordinal='34' />
            <column datatype='real' name='Case Recovered Rate' ordinal='35' />
            <column datatype='real' name='Growth Factor of New Cases' ordinal='36' />
            <column datatype='real' name='Growth Factor of New Deaths' ordinal='37' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location ISO Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location ISO Code]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Location ISO Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Recovered]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Active Cases]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Active Cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Active Cases]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Active Cases</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location Level</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location Level]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Location Level</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City or Regency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City or Regency]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>City or Regency</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Island</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Island]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Island</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time Zone]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Time Zone</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Special Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Special Status]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Special Status</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Regencies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Regencies]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Regencies</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cities]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Cities</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Districts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Districts]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Districts</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Urban Villages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Urban Villages]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Urban Villages</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Rural Villages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Rural Villages]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Rural Villages</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area (km2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area (km2)]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Area (km2)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases per Million]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Cases per Million</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases per Million]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Cases per Million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths per Million]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>New Deaths per Million</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths per Million]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Deaths per Million</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths per 100rb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths per 100rb]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Total Deaths per 100rb</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case Fatality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Case Fatality Rate]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Case Fatality Rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case Recovered Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Case Recovered Rate]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Case Recovered Rate</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth Factor of New Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Growth Factor of New Cases]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Growth Factor of New Cases</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth Factor of New Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Growth Factor of New Deaths]</local-name>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias>Growth Factor of New Deaths</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_indonesia_time_series_]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AL10001:no:A1:AL10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Area (km2)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Case Fatality Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Case Recovered Rate]' role='measure' type='quantitative' />
      <column datatype='string' name='[City or Regency]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Date]' role='dimension' type='nominal' />
      <column datatype='real' name='[Growth Factor of New Cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[Growth Factor of New Deaths]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[New Active Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[New Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[New Cases]' peg='0' size='1434' />
      </column>
      <column datatype='real' name='[New Cases per Million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[New Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[New Deaths (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[New Deaths]' peg='0' size='82' />
      </column>
      <column datatype='real' name='[New Deaths per Million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[New Deaths]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[New Recovered (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[New Recovered]' peg='0' size='1241' />
      </column>
      <column datatype='integer' name='[New Recovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population Density]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total Active Cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Cases per Million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Cities]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Deaths per 100rb]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Deaths per Million]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Districts]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Recovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Regencies]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Rural Villages]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Urban Villages]' role='measure' type='quantitative' />
      <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
      <column-instance column='[Area (km2)]' derivation='Sum' name='[sum:Area (km2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Case Fatality Rate]' derivation='Sum' name='[sum:Case Fatality Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Case Recovered Rate]' derivation='Sum' name='[sum:Case Recovered Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Growth Factor of New Cases]' derivation='Sum' name='[sum:Growth Factor of New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Growth Factor of New Deaths]' derivation='Sum' name='[sum:Growth Factor of New Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Active Cases]' derivation='Sum' name='[sum:New Active Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases per Million]' derivation='Sum' name='[sum:New Cases per Million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths per Million]' derivation='Sum' name='[sum:New Deaths per Million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population Density]' derivation='Sum' name='[sum:Population Density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Active Cases]' derivation='Sum' name='[sum:Total Active Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases per Million]' derivation='Sum' name='[sum:Total Cases per Million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cities]' derivation='Sum' name='[sum:Total Cities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths per 100rb]' derivation='Sum' name='[sum:Total Deaths per 100rb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths per Million]' derivation='Sum' name='[sum:Total Deaths per Million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Districts]' derivation='Sum' name='[sum:Total Districts:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Recovered]' derivation='Sum' name='[sum:Total Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Regencies]' derivation='Sum' name='[sum:Total Regencies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Rural Villages]' derivation='Sum' name='[sum:Total Rural Villages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Urban Villages]' derivation='Sum' name='[sum:Total Urban Villages:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, Province, City or Regency'>
          <field>[Country]</field>
          <field>[Province]</field>
          <field>[City or Regency]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.543568' measure-ordering='alphabetic' measure-percentage='0.456432' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Date:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1/19/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1/6/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10/13/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10/2/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10/23/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11/13/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11/23/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11/3/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12/17/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12/4/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2/18/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2/5/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3/16/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3/26/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3/6/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4/17/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4/27/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4/6/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5/18/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5/28/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5/8/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6/19/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6/29/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6/8/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7/10/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7/20/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7/30/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8/10/2021&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8/21/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8/31/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9/11/2020&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9/21/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1/1/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1/12/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1/31/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10/19/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10/29/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10/8/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11/19/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11/29/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11/9/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12/10/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12/29/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2/11/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3/12/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3/2/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3/22/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4/13/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4/2/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4/23/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5/14/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5/24/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5/4/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6/15/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6/25/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6/4/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7/16/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7/26/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7/6/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8/17/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8/27/2020&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8/6/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9/17/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9/27/2021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9/7/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1/15/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1/4/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10/10/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10/21/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10/31/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11/11/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11/21/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12/13/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12/2/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2/14/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2/3/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3/14/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3/24/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3/4/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4/15/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4/25/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4/4/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5/16/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5/26/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5/6/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6/17/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6/27/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6/6/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7/18/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7/28/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7/8/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8/19/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8/29/2020&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8/8/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9/19/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9/29/2021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9/9/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1/23/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1/8/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10/15/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10/25/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10/4/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11/15/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11/25/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11/5/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12/21/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12/6/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2/22/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2/7/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3/18/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3/28/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3/8/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4/19/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4/29/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4/8/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5/10/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5/20/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5/30/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6/10/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6/21/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7/1/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7/12/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7/22/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8/13/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8/2/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8/23/2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9/13/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9/23/2021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9/3/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1/20/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1/6/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10/13/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10/23/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10/3/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11/14/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11/24/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11/3/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12/18/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12/5/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2/19/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2/6/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3/17/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3/27/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3/7/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4/17/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4/27/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4/7/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5/19/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5/29/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5/8/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6/19/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6/29/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6/9/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7/10/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7/21/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7/31/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8/11/2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8/21/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8/31/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9/11/2021&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9/22/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1/16/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1/4/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10/11/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10/21/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10/31/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11/11/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11/22/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12/14/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12/3/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2/15/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2/4/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3/15/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3/25/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3/5/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4/15/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4/25/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4/5/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5/17/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5/27/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5/6/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6/17/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6/27/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6/7/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7/19/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7/29/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7/8/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8/19/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8/29/2021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8/9/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9/20/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9/30/2020&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9/9/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1/11/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1/29/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10/18/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10/28/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10/7/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11/18/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11/28/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11/8/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12/27/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12/9/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2/10/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2/28/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3/11/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3/21/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3/31/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4/11/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4/22/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5/13/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5/23/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5/3/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6/14/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6/24/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6/3/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7/15/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7/25/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;7/5/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8/16/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8/26/2020&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8/5/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9/16/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9/26/2021&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9/6/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1/12/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1/2/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10/19/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10/29/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10/9/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11/20/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11/30/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11/9/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12/11/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12/30/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2/1/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2/12/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3/13/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3/23/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3/3/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4/13/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4/23/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4/3/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5/15/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5/25/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5/4/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6/15/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6/25/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6/5/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7/17/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7/27/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;7/6/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8/17/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8/27/2021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8/7/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9/18/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9/28/2020&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9/7/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1/10/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1/27/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10/17/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10/27/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10/6/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11/17/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11/27/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11/7/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12/25/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12/8/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2/26/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2/9/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3/10/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3/20/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3/30/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4/10/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4/21/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5/1/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5/12/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5/22/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6/13/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6/2/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6/23/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7/14/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7/24/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7/4/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8/15/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8/25/2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8/4/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9/15/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9/25/2021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;9/5/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1/17/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1/5/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10/11/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10/22/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11/1/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11/12/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11/22/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12/15/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12/3/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2/16/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2/4/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3/15/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3/25/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3/5/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4/16/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4/26/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;4/5/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5/17/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5/27/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5/7/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6/18/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6/28/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6/7/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7/19/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7/29/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7/9/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8/20/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8/30/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8/9/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9/10/2020&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9/20/2021&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9/30/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1/24/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1/8/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10/15/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10/25/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10/5/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11/16/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11/26/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11/5/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12/22/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12/7/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2/23/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2/8/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3/19/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3/29/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3/9/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4/19/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4/29/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4/9/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5/10/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5/21/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5/31/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6/11/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6/21/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7/13/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7/2/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7/23/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8/13/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8/23/2021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8/3/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9/14/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9/24/2020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9/3/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1/25/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1/9/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10/16/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10/26/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10/5/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11/16/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11/26/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11/6/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12/23/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12/7/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2/24/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2/8/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3/19/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3/29/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3/9/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4/20/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4/30/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4/9/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5/11/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5/21/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5/31/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6/11/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6/22/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7/13/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7/23/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7/3/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8/14/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8/24/2020&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8/3/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9/14/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9/24/2021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9/4/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1/10/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1/28/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10/17/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10/27/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10/7/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11/18/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11/28/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11/7/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12/26/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12/9/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2/10/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2/27/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3/11/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3/21/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3/31/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4/11/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4/21/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5/13/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5/2/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5/23/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6/13/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6/23/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6/3/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7/15/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7/25/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7/4/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8/15/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8/25/2021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8/5/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9/16/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9/26/2020&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9/5/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1/11/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1/30/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10/18/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10/28/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10/8/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11/19/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11/29/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11/8/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12/10/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12/28/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2/11/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3/1/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3/12/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3/22/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4/1/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4/12/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4/22/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5/14/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5/24/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5/3/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6/14/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6/24/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6/4/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7/16/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7/26/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7/5/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8/16/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8/26/2021&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8/6/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9/17/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9/27/2020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9/6/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1/21/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1/7/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10/14/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10/24/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10/3/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11/14/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11/24/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11/4/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12/19/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12/5/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2/20/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2/6/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3/17/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3/27/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3/7/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4/18/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4/28/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4/7/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5/19/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5/29/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5/9/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6/20/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6/30/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6/9/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7/11/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7/21/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7/31/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8/11/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8/22/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9/1/2021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9/12/2020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9/22/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1/18/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1/5/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10/1/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10/12/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10/22/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11/13/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11/2/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11/23/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12/16/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12/4/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2/17/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2/5/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3/16/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3/26/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3/6/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4/16/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4/26/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4/6/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5/18/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5/28/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5/7/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6/18/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6/28/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6/8/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7/20/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7/30/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7/9/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8/10/2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8/20/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8/30/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9/10/2021&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9/21/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1/13/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1/3/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10/20/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10/30/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10/9/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11/10/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11/20/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11/30/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12/11/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12/31/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2/12/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2/2/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3/13/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3/23/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3/3/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4/14/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4/24/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4/3/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5/15/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5/25/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5/5/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6/16/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6/26/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6/5/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7/17/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7/27/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7/7/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8/18/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8/28/2020&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8/7/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9/18/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9/28/2021&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9/8/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1/26/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1/9/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10/16/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10/26/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10/6/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11/17/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11/27/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11/6/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12/24/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12/8/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2/25/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2/9/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3/10/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3/20/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3/30/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4/10/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4/20/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;4/30/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5/11/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5/22/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6/1/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6/12/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6/22/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7/14/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7/24/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7/3/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8/14/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8/24/2021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8/4/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9/15/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9/25/2020&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9/4/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1/22/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1/7/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10/14/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10/24/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10/4/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11/15/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11/25/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11/4/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12/20/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12/6/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2/21/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2/7/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3/18/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3/28/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3/8/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4/18/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4/28/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4/8/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5/20/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5/30/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5/9/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6/10/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6/20/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6/30/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7/11/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7/22/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8/1/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8/12/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8/22/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9/13/2020&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9/2/2021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9/23/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1/14/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1/3/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10/10/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10/20/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10/30/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11/10/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11/21/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12/1/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12/12/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2/13/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2/3/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3/14/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3/24/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3/4/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4/14/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4/24/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4/4/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5/16/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5/26/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5/5/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6/16/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6/26/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6/6/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7/18/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7/28/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7/7/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8/18/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8/28/2021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8/8/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9/19/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9/29/2020&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9/8/2021&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[avg:Longitude:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Case Recovered Rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Recovered:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Deaths per Million:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Active Cases:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Growth Factor of New Cases:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Regencies:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Cases per Million:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Area (km2):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Deaths per 100rb:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Active Cases:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Growth Factor of New Deaths:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Rural Villages:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Cases:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Cities:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Recovered:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[avg:Latitude:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Urban Villages:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Deaths per Million:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Population Density:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases per Million:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Case Fatality Rate:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Districts:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Daily New Recovered' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Daily New Case'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_indonesia_time_series_ (covid_indo)' name='federated.0pmdfnp026tua71ckhou70v3akme' />
          </datasources>
          <datasource-dependencies datasource='federated.0pmdfnp026tua71ckhou70v3akme'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[New Cases]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]'>
            <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]</rows>
        <cols>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{C6BA059F-8D68-4422-BE61-2DFE9A483F4B}' />
    </worksheet>
    <worksheet name='Daily New Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_indonesia_time_series_ (covid_indo)' name='federated.0pmdfnp026tua71ckhou70v3akme' />
          </datasources>
          <datasource-dependencies datasource='federated.0pmdfnp026tua71ckhou70v3akme'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[New Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths]' derivation='Sum' name='[sum:New Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Deaths:qk]</rows>
        <cols>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</cols>
        <show-full-range>
          <column>[federated.0pmdfnp026tua71ckhou70v3akme].[New Deaths (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{BBE17F21-01E3-43FD-833E-8714AC28C609}' />
    </worksheet>
    <worksheet name='Daily New Recovered'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_indonesia_time_series_ (covid_indo)' name='federated.0pmdfnp026tua71ckhou70v3akme' />
          </datasources>
          <datasource-dependencies datasource='federated.0pmdfnp026tua71ckhou70v3akme'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[New Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aceh&quot;' function='range' level='[none:Location:nk]' to='&quot;Gorontalo&quot;' />
              <groupfilter from='&quot;Jambi&quot;' function='range' level='[none:Location:nk]' to='&quot;Sumatera Utara&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Recovered:qk]</rows>
        <cols>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{C27B18E3-839C-43C6-B4BB-36165C2454EB}' />
    </worksheet>
    <worksheet name='Mapping Data Covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_indonesia_time_series_ (covid_indo)' name='federated.0pmdfnp026tua71ckhou70v3akme' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pmdfnp026tua71ckhou70v3akme'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[New Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[New Recovered]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Cases]' derivation='Sum' name='[sum:New Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Recovered]' derivation='Sum' name='[sum:New Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pmdfnp026tua71ckhou70v3akme].[none:Province:nk]'>
            <groupfilter from='&quot;Aceh&quot;' function='range' level='[none:Province:nk]' to='&quot;Sumatera Utara&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pmdfnp026tua71ckhou70v3akme].[Longitude (generated)]' field-type='quantitative' max='17689346.249626558' min='7589398.3815260082' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pmdfnp026tua71ckhou70v3akme].[Latitude (generated)]' field-type='quantitative' max='689887.44449203648' min='-2170664.2694494869' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0pmdfnp026tua71ckhou70v3akme].[none:Country:nk]' />
              <lod column='[federated.0pmdfnp026tua71ckhou70v3akme].[none:Province:nk]' />
              <color column='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]' />
              <lod column='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:Total Deaths:qk]' />
              <lod column='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Recovered:qk]' />
              <geometry column='[federated.0pmdfnp026tua71ckhou70v3akme].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pmdfnp026tua71ckhou70v3akme].[Latitude (generated)]</rows>
        <cols>[federated.0pmdfnp026tua71ckhou70v3akme].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6C62BFB3-534A-49BD-9CB2-4D5BF89E2740}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1100' minheight='800' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98546' x='727' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98546' x='727' y='1000'>
              <zone h='29500' id='3' name='Mapping Data Covid' w='98546' x='727' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='68500' id='11' name='Daily New Case' w='36909' x='727' y='30500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='68500' id='12' name='Daily New Deaths' w='33728' x='37636' y='30500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='68500' id='13' name='Daily New Recovered' w='27909' x='71364' y='30500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type='layout-flow' w='98546' x='727' y='1000'>
                <zone fixed-size='228' h='29500' id='3' is-fixed='true' name='Mapping Data Covid' w='98546' x='727' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68500' id='11' is-fixed='true' name='Daily New Case' w='36909' x='727' y='30500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68500' id='12' is-fixed='true' name='Daily New Deaths' w='33728' x='37636' y='30500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68500' id='13' is-fixed='true' name='Daily New Recovered' w='27909' x='71364' y='30500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FE89B708-97A6-41EC-ABA3-C81F72CBFF45}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Mapping Data Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pmdfnp026tua71ckhou70v3akme].[sum:New Cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13FDEE05-BC1B-4DE7-9E8A-7D9B01B59A07}' />
    </window>
    <window class='worksheet' name='Daily New Case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Island:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10A9247D-7E92-42EE-A3BC-A69845D5CDDD}' />
    </window>
    <window class='worksheet' name='Daily New Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:New Deaths (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF5E1C2D-C1FA-489A-8D04-46F419555653}' />
    </window>
    <window class='worksheet' name='Daily New Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Continent:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Date:nk]</field>
            <field>[federated.0pmdfnp026tua71ckhou70v3akme].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0959426-3F2C-4D90-94FF-5CFD0C54B1B8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Daily New Case'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Daily New Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Daily New Recovered'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mapping Data Covid'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{3872FA80-F87D-4C85-BE28-166100DFAE02}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily New Case' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily New Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily New Recovered' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mapping Data Covid' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
